==========================================================
создание миграций и таблиц БД

добавляются новые миграции через консоль - php artisan migrate:make create_posts_table
появляются здесь - app/database/migrations
в миграциях создастся файл, переходим в него и редактируем, создаем шаблон таблицы.

чтобы создать таблицу в mysql вводим в консоли - php artisan migrate
консоль спросит подтверждения, пишем - yes

для удаления таблицы мы инициализируем метод down('table')
и в консоли - php artisan migrate:rollback  ... yes

==========================================================

javascript - загрузим необходимые библиотеки и фреймворки
создадим модель с дефолтными данными, создадим вид (можно сразу с валидацией),
создадим page.js для создания экземпляров.

==========================================================
сидинг данных

Порядок следующий

Добавление роутов - app/routes.php
Добавление контроллеров - app/controllers
Добавление вида - app/view
В view можно так же создать папку template для небольших шаблонов

==========================================================
Добавление тестовых данных в базу.

установим faker с помощью composer добавив в вайле composer.json строку "fzaninotto/faker": "1.*" в объект require
обновить в консоли - composer update
Создадим еще одну модель Posts.php, пока пустую (или такую class Post extends Eloquent {} )
в папке app/database/seeds добавим файл PostsSeeder.php - т.к. posts наша таблица - наполним ее фейковыми данными
в файле app/database/seeds/DatabaseSeeder.php - объявим новый seder - PostsSeeder
и в консоли объявим его - php artisan db:seed

=======$faker===================================================
Вывод информации из базы.

создатим статический метод getAll() в модели Post.php
в контроллере HomeController.php добавим ->with('posts', $posts); - он будет принимать метод posts и ипередавать его в вид
опишем вид home.blade.php